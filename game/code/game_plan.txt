 TODO

 - Implement multiple sim regions per frame
   - Fix hash table routines in sim_region to not have to do clears on returns
     (just have them return a bool as to whether they found the entry or not)
   - Eliminate world mode from sim step entirely
   - Per-entity clocking
   - Sim region merging? For multiple players?


 - Graphics Upgrade
   - 3D 
     - 3D pipeline
     - Make concept of 3D rooms that can be queried
     - Update camera to move between viewing locations for 3D rooms
   - Particle systems
     - Bug with sliding relative to the grid during camera offset?
     - How will floor Z's be handled?
   - Transition to real artwork
     - Clean up the notion of multi-part entities and how they are animated
   - Lighting

 - Collision detection
   - Clean up predicate proliferation. Can we make a nice clean
     set of flags/rules so that it's easy to understand how
     things work in terms of special handling? This may involve
     making the iteration handle everything instead of handling
     overlap outside and so on.
   - Transient collision rules, clear based on flag
     - Allow non-stransient rules to overide transient ones
     - Entry / exit?
   - What's the plan for robustness / shape definition?
   - Implement reprojection to handle interpenetration
   - Things pushing other things

 PRODUCTION
 -> GAME
   - Rudimentary world gen (no quality, just 'what sorts of things' we do)
     - Placement of background things
     - Connectivity?
       - Large-Scale AI Pathfinding
     - Non-overlapping?
     - Map display
       - Magnets - how do they work?
     - Rigorous definition of how things move, when things trigger, etc.
 - Metagame / save game
   - How do you enter a 'save slot'?
   - Persistent unlocks/etc
   - Do we allow saved games? Probably yes, just for 'pausing',
   * Continuous save for crash recovery?

 CLEAN UP
 - Debug code
   - Diagramming
   - Draw tile chunks so we can verify that things are aligned /
     in the chunks we want them to be in
   - Frame view not showing bad frams
   - Hardware Rendering
     - Shaders
   - Pixel buffer objects for texture downloads

 - Audio
   - Fix the clicking bug at the end of samples.

  EXTRA CREDIT
  - Serious optimisation of the software renderer
